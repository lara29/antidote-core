syntax = "proto3";
package syringe.api.exp;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "lesson.proto";

service LiveLessonsService {

  rpc HealthCheck(google.protobuf.Empty) returns (LBHealthCheckResponse) {
    option (google.api.http) = {
      get: "/*"
    };
  }

  // Request a lab is created, or request the UUID of one that already exists for these parameters.
  rpc RequestLiveLesson(LiveLessonRequest) returns (LiveLessonId) {
    option (google.api.http) = {
      post: "/exp/livelesson"
      body: "*"
    };
  }

  // Retrieve details about a lesson
  rpc GetLiveLesson(LiveLessonId) returns (LiveLesson) {
    option (google.api.http) = {
      get: "/exp/livelesson/{id}"
    };
  }

  // THESE ARE SENSITIVE - do not expose via REST
  rpc ListLiveLessons(google.protobuf.Empty) returns (LiveLessons) {}
  rpc KillLiveLesson(LiveLessonId) returns (KillLiveLessonStatus) {}
}

message LBHealthCheckResponse {}

message Session {
  string id = 1;
}

enum Status {
  DONOTUSE = 0;   // Protobuf doesn't encode the default value. Throwing this one away.
  INITIAL_BOOT = 1;
  CONFIGURATION = 2;
  READY = 3;
}

message LiveLesson {
  string Id = 1;
  string LessonSlug = 2;

  map <string, Endpoint> LiveEndpoints  = 3;

  int32 LessonStage = 5;
  string LabGuide = 6;
  bool JupyterLabGuide = 7;

  Status LiveLessonStatus = 8;

  google.protobuf.Timestamp createdTime = 9;
  string LessonDiagram = 10;
  string LessonVideo = 11;
  bool Error = 12;
  int32 HealthyTests = 13;
  int32 TotalTests = 14;
}

message LiveLessons {
  map<string, LiveLesson> items = 1;
}

message LiveLessonRequest {
  string lessonSlug = 1;
  string sessionId = 2;
  int32 lessonStage = 3;
}

message LiveLessonId {
  string id = 1;
}

message KillLiveLessonStatus {
  bool success = 1;
}
