syntax = "proto3";
package antidote.api.exp;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
service LiveLessonsService {

  rpc HealthCheck(google.protobuf.Empty) returns (LBHealthCheckResponse) {
    option (google.api.http) = {
      get: "/*"
    };
  }

  // Request a lab is created, or request the UUID of one that already exists for these parameters.
  rpc RequestLiveLesson(LiveLessonRequest) returns (LiveLessonId) {
    option (google.api.http) = {
      post: "/exp/livelesson"
      body: "*"
    };
  }

  // Retrieve details about a lesson
  rpc GetLiveLesson(LiveLessonId) returns (LiveLesson) {
    option (google.api.http) = {
      get: "/exp/livelesson/{id}"
    };
  }

  // THESE ARE SENSITIVE - do not expose via REST
  rpc ListLiveLessons(google.protobuf.Empty) returns (LiveLessons) {}
  rpc KillLiveLesson(LiveLessonId) returns (KillLiveLessonStatus) {}
  rpc CreateLiveLesson(LiveLesson) returns (google.protobuf.Empty) {}

}

message LBHealthCheckResponse {}

message Session {
  string id = 1;
}

// enum Status {
//   DONOTUSE = 0;   // Protobuf doesn't encode the default value. Throwing this one away.
//   INITIAL_BOOT = 1;
//   CONFIGURATION = 2;
//   READY = 3;
// }

message LiveEndpoint {
  string Name = 1;
  string Image = 2;
  repeated int32 Ports = 4;
  repeated LivePresentation LivePresentations = 5;
  string Host = 6;
}

message LivePresentation {
  string Name = 1;
  int32 Port = 2;
  string Type = 3;
}


message LiveLesson {
  string ID = 1;
  string LessonSlug = 2;

  map <string, LiveEndpoint> LiveEndpoints  = 3;

  int32 LessonStage = 5;
  string LabGuide = 6;
  bool JupyterLabGuide = 7;

  string Status = 8;

  string LessonDiagram = 9;
  string LessonVideo = 10;
  bool Error = 11;
  int32 HealthyTests = 12;
  int32 TotalTests = 13;
}

message LiveLessons {
  map<string, LiveLesson> LiveLessons = 1;
}

message LiveLessonRequest {
  string lessonSlug = 1;
  string sessionId = 2;
  int32 lessonStage = 3;
}

message LiveLessonId {
  string id = 1;
}

message KillLiveLessonStatus {
  bool success = 1;
}
