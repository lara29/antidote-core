syntax = "proto3";
package syringe.api.exp;

import "google/api/annotations.proto";
// import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "google/protobuf/descriptor.proto";

service LessonService {

  // Retrieve all Lessons with filter
  rpc ListLessons(LessonFilter) returns (Lessons) {
    option (google.api.http) = {
      get: "/exp/lesson"
    };
  }

  rpc GetAllLessonPrereqs(LessonID) returns (LessonPrereqs) {
    option (google.api.http) = {
      get: "/exp/lesson/{id}/prereqs"
    };
  }

  rpc GetLesson(LessonID) returns (Lesson) {
    option (google.api.http) = {
      get: "/exp/lesson/{id}"
    };
  }

}


extend google.protobuf.FieldOptions {
  Syringe syringe = 1234;
}

message Syringe {
  string field_description = 1;
}

message Lessons {
  repeated Lesson lessons = 1;
}

message LessonPrereqs {
  repeated int32 prereqs = 1;
}

message LessonID {
  int32 id = 1;
}

message Lesson {
  int32 LessonId = 1 [(validate.rules).int32.gt = 0];
  repeated LessonStage Stages = 2 [(validate.rules).repeated.min_items = 1];
  string LessonName = 3 [(validate.rules).string.min_len = 10];
  repeated Endpoint Endpoints = 4 [(validate.rules).repeated = {min_items: 1}];
  repeated Connection Connections = 8;
  string Category = 9 [(validate.rules).string = {in: ["fundamentals", "tools", "workflows"]}];
  string LessonDiagram = 10;
  string LessonVideo = 11;
  string Tier = 12 [(validate.rules).string = {in: ["local", "ptr", "prod"]}];
  repeated int32 Prereqs = 13;
  repeated string Tags = 14;
  int32 Collection = 15;
  string Description = 16 [(validate.rules).string.min_len = 10];

  // This is meant to fill: "How well do you know <slug>?"
  string Slug = 17 [(validate.rules).string.min_len = 1];
  string LessonFile = 18;
  string LessonDir = 19;
}

message LessonFilter {
  string Category = 2;
}

message LessonStage {
  int32 Id = 1 [(validate.rules).int32.gt = 0];
  string Description = 2 [(validate.rules).string.min_len = 1];
  string LabGuide = 3;
  bool JupyterLabGuide = 4;
  bool VerifyCompleteness = 5;
  string VerifyObjective = 6;
}

message Endpoint {
  string Name = 1 [(validate.rules).string.min_len = 1];
  string Image = 2 [(validate.rules).string.min_len = 1];

  // Validation for this field will be done post-validation
  string ConfigurationType = 3;

  // Handles any ports not explicitly mentioned in a presentation
  repeated int32 AdditionalPorts = 4;

  repeated Presentation Presentations = 5;
  
  string Host = 6;

}

message Presentation {
  string Name = 1;
  int32 Port = 2;
  string Type = 3 [(validate.rules).string = {in: ["http", "vnc", "ssh"]}];
}


message Connection {
  string A = 1 [(validate.rules).string.min_len = 1];
  string B = 2 [(validate.rules).string.min_len = 1];
}
